{"version":3,"sources":["components/Nav/Navigation.js","components/Header/Header.js","components/VideoLoop/videoBackground.mp4","components/VideoLoop/VideoLoop.js","utils/auth.js","pages/Home.js","utils/queries.js","utils/mutations.js","components/ArtistProfile/ArtistProfile.js","components/VenueList/VenueList.js","components/HostProfile/HostProfile.js","pages/Account.js","components/ArtistCard/ArtistCard.js","pages/Bookings.js","components/CalendarFilter/CalendarFilter.js","components/DropDownFilter/TagsMultiSelect.js","components/DropDownFilter/DropDownFilter.js","pages/Explore.js","components/ArtistReservation/ArtistReservation.js","pages/Saved.js","assets/musician.jpeg","pages/Login.js","assets/hostPic.jpeg","pages/LoginHost.js","assets/juanArtist.jpeg","components/Modal/ArtistModal.js","pages/ArtistSignup.js","components/Modal/HostModal.js","assets/davidHost.jpeg","pages/HostSignup.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["tabs","route","icon","faSearch","label","faHeart","faBook","faUser","Navigation","props","className","role","map","tab","index","to","activeClassName","size","Header","alt","src","VideoLoop","loop","muted","autoPlay","controls","backgroundVideo","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Home","auth","loggedIn","pathname","GET_MEARTIST","gql","GET_ARTIST","GET_MEHOST","GET_HOST","LOGIN_HOST","ADD_HOST","DELETE_HOST","LOGIN_ARTIST","ADD_ARTIST","DELETE_ARTIST","ADD_VENUE","DELETE_VENUE","ArtistProfile","userParam","useParams","username","useMutation","deleteArtist","useQuery","variables","loading","data","artist","me","Auth","getProfile","handleClick","a","id","_id","console","error","onClick","VenueList","venues","title","length","venue","style","fontWeight","createdAt","HostProfile","addVenue","deleteHost","deleteVenue","host","clickVenue","clickDelHost","clickDelVenue","venueCount","hosts","Account","href","event","preventDefault","logout","ArtistCard","saveArtist","artistsData","faHeartCirclePlus","showThumbs","showStatus","pictures","picture","Name","Rate","musicType","bandSize","Bookings","CalendarFilter","useState","date","setDate","onChange","value","selectRange","tags","TagsMultiSelect","selectedTags","setSelectedTags","MultiSelect","autoClose","rounded","DropDownFilter","hint","type","placeholder","Slider","getAriaLabel","defaultValue","min","max","valueLabelDisplay","sx","color","Explore","ArtistReservation","spotify","rating","rate","description","Saved","Login","formStateEmail","setFormStateEmail","formStatePassword","setFormStatePassword","login","history","useHistory","handleFormSubmit","email","password","log","mutationResponse","push","Musician","width","height","Form","onSubmit","Label","htmlFor","Control","target","Text","LoginHost","Host","Modal","closeModal","formStateName","setFormStateName","formStateMusicType","setFormStateMusicType","formStateUsername","setFormStateUsername","addArtist","name","Group","ArtistSignup","openModal","setOpenModal","Artist","formStateFirstName","setFormStateFirstName","formStateLastName","setFormStateLastName","setFromStatePassword","addHost","firstName","lastName","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","HostSignup","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.65d58807.chunk.js","sourcesContent":["import React from \"react\";\nimport { Nav, NavItem } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSearch,\n  faBook,\n  faUser,\n  faHeart,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./navigation.css\";\n\nconst tabs = [\n  {\n    route: \"/explore\",\n    icon: faSearch,\n    label: \"Explore\",\n  },\n  {\n    route: \"/saved\",\n    icon: faHeart,\n    label: \"Saved\",\n  },\n  {\n    route: \"/bookings\",\n    icon: faBook,\n    label: \"Bookings\",\n  },\n  {\n    route: \"/account\",\n    icon: faUser,\n    label: \"Account\",\n  },\n];\n\nconst Navigation = (props) => {\n  return (\n    <nav className=\"bottom-tab-nav navbar  navbar-light\" role=\"navigation\">\n      <Nav className=\"w-100\">\n        <div className=\" d-flex flex-row justify-content-around w-100\">\n          {tabs.map((tab, index) => (\n            <NavItem key={`tab-${index}`}>\n              <NavLink\n                to={tab.route}\n                className=\"bottom-nav-link\"\n                activeClassName=\"active\"\n              >\n                <div className=\"row d-flex flex-column justify-content-center align-items-center\">\n                  <FontAwesomeIcon size=\"lg\" icon={tab.icon} />\n                  <div>{tab.label}</div>\n                </div>\n              </NavLink>\n            </NavItem>\n          ))}\n        </div>\n      </Nav>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { Nav } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./header.css\";\n\nconst Header = (props) => {\n  return (\n    <div className=\"navbar  navbar-light\">\n      <Nav className=\"w-100 d-flex flex-row w-100\">\n        <NavLink\n          to={\"/\"}\n          className=\"d-flex nav-link col-3 mx-auto justify-content-center\"\n        >\n          <img alt=\"HouseShow Logo\" src=\"./images/houseshow-logo-large.png\" />\n        </NavLink>\n      </Nav>\n    </div>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/videoBackground.fcee9df6.mp4\";","import React from \"react\";\nimport backgroundVideo from \"./videoBackground.mp4\";\nimport \"./VideoLoop.css\";\nconst VideoLoop = (props) => {\n  return (\n    <div className=\"videoContainer\">\n      <video loop muted autoPlay controls=\"\" className=\"videoFrame\">\n        <source src={backgroundVideo} />\n      </video>\n    </div>\n  );\n};\nexport default VideoLoop;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport VideoLoop from \"../components/VideoLoop/VideoLoop\";\nimport \"./Home.css\";\nimport auth from \"../utils/auth\";\nconst Home = () => {\n  return (\n    <div className=\"w-100 d-flex flex-column align-items-center justify-content-center \">\n      <VideoLoop className=\"mb-5\" />\n      {auth.loggedIn() && <Link to={{ pathname: \"/explore\" }}></Link>}\n      <Link className=\"mt-5 btn button\" to={{ pathname: \"/explore\" }}>\n        Explore\n      </Link>\n      <div className=\"w-100 d-flex flex-row align-items-center\">\n        <Link\n          className=\"signIn-Link btn mx-auto\"\n          to={{ pathname: \"/loginHost\" }}\n        >\n          Sign in as Host\n        </Link>\n        <Link className=\" signIn-Link btn mx-auto\" to={{ pathname: \"/login\" }}>\n          Sign in as Artist\n        </Link>\n      </div>\n      <div className=\"w-100 d-flex flex-row align-items-center mb-4\">\n        <Link className=\"btn button mx-auto\" to={{ pathname: \"/hostSignup\" }}>\n          I want to Host\n        </Link>\n        <Link className=\"btn button mx-auto\" to={{ pathname: \"/artistSignup\" }}>\n          I want to Perform\n        </Link>\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_MEARTIST = gql`\n  {\n    meArtist {\n      _id\n      name\n      rating\n      musicType\n      rate\n      bandSize\n      pictures\n      spotifyLink\n      email\n      venues {\n        _id\n        name\n        owner\n        description\n        city\n        occupancy\n        pictures\n        cost\n      }\n    }\n  }\n`;\n\nexport const GET_ARTIST = gql`\n  query artist($name: String) {\n    artist(name: $name) {\n      _id\n      name\n      rating\n      musicType\n      rate\n      bandSize\n      pictures\n      spotifyLink\n      email\n      venues {\n        _id\n        name\n        owner\n        description\n        city\n        occupancy\n        pictures\n        cost\n      }\n    }\n  }\n`;\n\nexport const GET_ARTISTS = gql`\n  query artists {\n    artists {\n      _id\n      name\n      rating\n      musicType\n      rate\n      bandSize\n      pictures\n      spotifyLink\n      email\n      venues {\n        _id\n        name\n        owner\n        description\n        city\n        occupancy\n        pictures\n        cost\n      }\n    }\n  }\n`;\n\nexport const GET_MEHOST = gql`\n  {\n    meHost {\n      _id\n      firstName\n      lastName\n      email\n      artists {\n        _id\n        name\n        rating\n        musicType\n        rate\n        email\n      }\n      venues {\n        _id\n        name\n        owner\n        description\n        city\n        occupancy\n        pictures\n        cost\n      }\n    }\n  }\n`;\n\nexport const GET_HOST = gql`\n  query host($email: String!) {\n    host(email: $email) {\n      _id\n      firstName\n      lastName\n      email\n      artists {\n        _id\n        name\n        rating\n        musicType\n        rate\n        email\n      }\n      venues {\n        _id\n        name\n        owner\n        description\n        city\n        occupancy\n        pictures\n        cost\n      }\n    }\n  }\n`;\n\nexport const GET_HOSTS = gql`\n  query hosts {\n    hosts {\n      _id\n      firstName\n      lastName\n      email\n      artists {\n        _id\n        name\n        rating\n        musicType\n        rate\n        email\n      }\n      venues {\n        _id\n        name\n        owner\n        description\n        city\n        occupancy\n        pictures\n        cost\n      }\n    }\n  }\n`;\n\nexport const GET_VENUE = gql`\n  query venue($name: String!) {\n    venue(name: $name) {\n      _id\n      name\n      owner\n      description\n      city\n      occupancy\n      pictures\n      cost\n    }\n  }\n`;\n\nexport const GET_VENUES = gql`\n  query venues {\n    venues {\n      _id\n      name\n      owner\n      description\n      city\n      occupancy\n      pictures\n      cost\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN_HOST = gql`\n  mutation loginHost($email: String!, $password: String!) {\n    loginHost(email: $email, password: $password) {\n      token\n      host {\n        _id\n        firstName\n        lastName\n      }\n    }\n  }\n`;\n\nexport const ADD_HOST = gql`\n  mutation addHost(\n    $username: String!\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addHost(\n      username: $username\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      host {\n        _id\n        firstName\n        lastName\n      }\n    }\n  }\n`;\n\nexport const UPDATE_HOST = gql`\n  mutation updateHost(\n    $username: String\n    $firstName: String\n    $lastName: String\n    $email: String\n  ) {\n    updateHost(\n      username: $username\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n    ) {\n      _id\n      firstName\n      lastName\n    }\n  }\n`;\n\nexport const DELETE_HOST = gql`\n  mutation deleteHost($id: ID!) {\n    deleteHost(id: $id) {\n      _id\n      firstName\n      lastName\n    }\n  }\n`;\n\nexport const HIRE_ARTIST = gql`\n  mutation hireArtist($artistId: ID!) {\n    hireArtist(artistId: $artistId) {\n      _id\n      firstName\n      lastName\n      artists {\n        _id\n        name\n      }\n    }\n  }\n`;\n\nexport const FIRE_ARTIST = gql`\n  mutation fireArtist($artistId: ID!) {\n    fireArtist(artistId: $artistId) {\n      _id\n      firstName\n      lastName\n      artists {\n        _id\n        name\n      }\n    }\n  }\n`;\n\nexport const LOGIN_ARTIST = gql`\n  mutation loginArtist($email: String!, $password: String!) {\n    loginArtist(email: $email, password: $password) {\n      token\n      artist {\n        _id\n        name\n      }\n    }\n  }\n`;\n\nexport const ADD_ARTIST = gql`\n  mutation addArtist(\n    $username: String!\n    $name: String!\n    $musicType: String!\n    $email: String!\n    $password: String!\n  ) {\n    addArtist(\n      username: $username\n      name: $name\n      musicType: $musicType\n      email: $email\n      password: $password\n    ) {\n      token\n      artist {\n        _id\n        name\n      }\n    }\n  }\n`;\n\nexport const UPDATE_ARTIST = gql`\n  mutation updateArtist(\n    $username: String\n    $name: String\n    $musicType: String\n    $pictures: [String]\n    $bandSize: Int\n    $rate: Int\n    $email: String\n  ) {\n    updateArtist(\n      username: $username\n      name: $name\n      musicType: $musicType\n      pictures: $pictures\n      bandSize: $bandSize\n      rate: $rate\n      email: $email\n    ) {\n      _id\n      name\n    }\n  }\n`;\n\nexport const DELETE_ARTIST = gql`\n  mutation deleteArtst($id: ID!) {\n    deleteArtist(id: $id) {\n      _id\n      name\n    }\n  }\n`;\n\nexport const BOOK_VENUE = gql`\n  mutation bookVenue($venueId: ID!) {\n    bookVenue(venueId: $venueId) {\n      _id\n      name\n      venues {\n        _id\n        name\n        city\n      }\n    }\n  }\n`;\n\nexport const REMOVE_VENUE = gql`\n  mutation removeVenue($venueName: String!) {\n    removeVenue(venueName: $venueName) {\n      _id\n      name\n      venues {\n        _id\n        name\n        city\n      }\n    }\n  }\n`;\n\nexport const ADD_VENUE = gql`\n  mutation addVenue(\n    $name: String!\n    $description: String!\n    $occupancy: Int!\n    $city: String!\n    $pictures: [String]\n    $cost: Int!\n    $owner: String!\n  ) {\n    addVenue(\n      name: $name\n      description: $description\n      occupancy: $occupancy\n      city: $city\n      pictures: $pictures\n      cost: $cost\n      owner: $owner\n    ) {\n      _id\n      name\n      description\n      occupancy\n      city\n      owner\n      cost\n    }\n  }\n`;\n\nexport const UPDATE_VENUE = gql`\n  mutation updateVenue(\n    $nameInput: String\n    $name: String\n    $description: String\n    $occupancy: Int\n    $city: String\n    $pictures: [String]\n    $owner: String\n    $cost: Int\n  ) {\n    updateVenue(\n      nameInput: $nameInput\n      name: $name\n      description: $description\n      occupancy: $occupancy\n      city: $city\n      pictures: $pictures\n      owner: $owner\n      cost: $cost\n    ) {\n      _id\n      name\n      description\n      occupancy\n      city\n      pictures\n      owner\n      cost\n    }\n  }\n`;\n\nexport const DELETE_VENUE = gql`\n  mutation deleteVenue($name: String!) {\n    deleteVenue(name: $name) {\n      _id\n      name\n    }\n  }\n`;\n","import React from \"react\";\nimport { Redirect, useParams } from 'react-router-dom';\n\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_ARTIST, GET_MEARTIST } from '../../utils/queries';\nimport { DELETE_ARTIST } from '../../utils/mutations';\nimport Auth from '../../utils/auth';\n\nconst ArtistProfile = (props) => {\n  const { username: userParam } = useParams();\n\n  const [deleteArtist] = useMutation(DELETE_ARTIST);\n  const { loading, data } = useQuery(userParam ? GET_ARTIST : GET_MEARTIST, {\n    variables: { username: userParam },\n  });\n\n  const artist = data?.me || data?.artist || {};\n\n  // redirect to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Redirect to=\"/account\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!artist?.username) {\n    return (\n      <h4>\n        You must be logged in to see this.\n      </h4>\n    );\n  }\n\n  const handleClick = async () => {\n    try {\n      await deleteArtist({\n        variables: { id: artist._id },\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"flex-row mb-3\">\n        <h2 className=\"bg-dark text-secondary p-3 display-inline-block\">\n          Viewing {userParam ? `${artist.username}'s` : 'your'} account.\n        </h2>\n\n        {userParam && (\n          <button className=\"btn ml-auto\" onClick={handleClick}>\n            Delete Artist\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ArtistProfile;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst VenueList = ({ venues, title }) => {\n  if (!venues.length) {\n    return <h3>No Venues Yet</h3>;\n  }\n\n  return (\n    <div>\n      <h3>{title}</h3>\n      {venues &&\n        venues.map(venue => (\n          <div key={venue._id} className=\"card mb-3\">\n            <p className=\"card-header\">\n              <Link\n                to={`/account/${venue.username}`}\n                style={{ fontWeight: 700 }}\n                className=\"text-light\"\n              >\n                {venue.username}\n              </Link>{' '}\n              venue on {venue.createdAt}\n            </p>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default VenueList;\n","import React from \"react\";\nimport { Redirect, useParams } from 'react-router-dom';\nimport VenueList from '../VenueList/VenueList';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_HOST, GET_MEHOST } from '../../utils/queries';\nimport { ADD_VENUE, DELETE_HOST, DELETE_VENUE } from '../../utils/mutations';\nimport Auth from '../../utils/auth';\n\nconst HostProfile = (props) => {\n  const { username: userParam } = useParams();\n\n  const [addVenue] = useMutation(ADD_VENUE);\n  const [deleteHost] = useMutation(DELETE_HOST);\n  const [deleteVenue] = useMutation(DELETE_VENUE);\n  const { loading, data } = useQuery(userParam ? GET_HOST : GET_MEHOST, {\n    variables: { username: userParam },\n  });\n\n  const host = data?.me || data?.host || {};\n\n  // redirect to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Redirect to=\"/account\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!host?.username) {\n    return (\n      <h4>\n        You must be logged in to see this.\n      </h4>\n    );\n  }\n\n  const clickVenue = async () => {\n    try {\n      await addVenue({\n        variables: { id: host._id },\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  const clickDelHost = async () => {\n    try {\n      await deleteHost({\n        variables: { id: host._id },\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  const clickDelVenue = async () => {\n    try {\n      await deleteVenue({\n        variables: { id: host._id },\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"flex-row mb-3\">\n        <h2 className=\"bg-dark text-secondary p-3 display-inline-block\">\n          Viewing {userParam ? `${host.username}'s` : 'your'} account.\n        </h2>\n\n        {userParam && (\n          <button className=\"btn ml-auto\" onClick={clickDelVenue}>\n            Delete Venue\n          </button>\n        )}\n\n        {userParam && (\n          <button className=\"btn ml-auto\" onClick={clickVenue}>\n            Add Venue\n          </button>\n        )}\n\n        {userParam && (\n          <button className=\"btn ml-auto\" onClick={clickDelHost}>\n            Delete Host\n          </button>\n        )}\n\n      </div>\n\n      <div className=\"flex-row justify-space-between mb-3\">\n        <div className=\"col-12 col-lg-3 mb-3\">\n          <VenueList\n            username={host.username}\n            venueCount={host.venueCount}\n            hosts={host.venues}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HostProfile;\n","import React from \"react\";\nimport ArtistProfile from \"../components/ArtistProfile/ArtistProfile\";\nimport HostProfile from \"../components/HostProfile/HostProfile\";\nimport Auth from '../utils/auth';\nimport { Link } from 'react-router-dom';\n\nconst Account = () => {\n  const logout = event => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  return ( \n\n  <div className=\"\">\n    <ArtistProfile />\n    <HostProfile />\n\n    <nav className=\"text-center\">\n          {Auth.loggedIn() ? (\n            <>\n              <Link to=\"/account\">Me</Link>\n              <a href=\"/\" onClick={logout}>\n                Logout\n              </a>\n            </>\n          ) : (\n            <>\n              <Link to=\"/\">Login</Link>\n            </>\n          )}\n        </nav>\n  </div>\n\n  );\n};\n\nexport default Account;","import React from \"react\";\n\nimport { Carousel } from \"react-responsive-carousel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeartCirclePlus } from \"@fortawesome/free-solid-svg-icons\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport \"./ArtistCard.css\";\n\nconst ArtistCard = (props) => {\n  const saveArtist = () => {};\n  return (\n    <div>\n      {props.artistsData.map((artist) => {\n        return (\n          <div\n            className=\"d-flex justify-content-center flex-column aligin-items-center\"\n            key={artist.id}\n          >\n            <FontAwesomeIcon\n              onClick={saveArtist}\n              size=\"xs\"\n              className=\"heartButton\"\n              icon={faHeartCirclePlus}\n            />\n            <Carousel\n              className=\"carousel mx-auto\"\n              showThumbs={false}\n              showStatus={false}\n            >\n              {artist.pictures.map((picture) => {\n                return (\n                  <img\n                    className=\"imgCarousel\"\n                    alt=\"artist pictures\"\n                    src={picture}\n                  />\n                );\n              })}\n            </Carousel>\n            <div className=\"d-flex justify-content-around pt-3 bookings-text\">\n              <div>\n                <h2 className=\"h2\">{artist.Name}</h2>\n                <h3 className=\"h3\">${artist.Rate}</h3>\n              </div>\n\n              <div>\n                <h2 className=\"h2\">{artist.musicType}</h2>\n                <h3 className=\"h3\">{artist.bandSize}</h3>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ArtistCard;\n","import React from \"react\";\nimport ArtistCard from \"../components/ArtistCard/ArtistCard\";\nconst Bookings = (props) => {\n  const artists = [\n    {\n      Name: \"Austin\",\n      Rate: \"50 per Hour\",\n      musicType: \"Pop\",\n      bandSize: \"2-4\",\n      pictures: [\n        \"/images/artist.png\",\n        \"/images/artist.png\",\n        \"/images/artist.png\",\n        \"/images/artist.png\",\n      ],\n      id: 0.123,\n    },\n    {\n      Name: \"Austin\",\n      Rate: \"50 per Hour\",\n      musicType: \"Pop\",\n      bandSize: \"2-4\",\n      pictures: [\n        \"/images/artist.png\",\n        \"/images/artist.png\",\n        \"/images/artist.png\",\n        \"/images/artist.png\",\n      ],\n      id: 0.124,\n    },\n  ];\n  return (\n    <div className=\"\">\n      <ArtistCard artistsData={artists}></ArtistCard>;\n    </div>\n  );\n};\nexport default Bookings;\n","import React, { useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"./CalendarFilter.css\";\n\nfunction CalendarFilter() {\n  const [date, setDate] = useState(new Date());\n\n  return (\n    <div className=\"calendar-container \">\n      <Calendar onChange={setDate} value={date} selectRange={true} />\n    </div>\n  );\n}\n\nexport default CalendarFilter;\n","import React from \"react\";\nimport { MultiSelect } from \"@progress/kendo-react-dropdowns\";\nimport { useState } from \"react\";\nimport \"./MultiSelect.css\";\n\nconst tags = [\n  \"JavaScript\",\n  \"TypeScript\",\n  \"React\",\n  \"Next\",\n  \"Vue\",\n  \"Nuxt\",\n  \"Node\",\n  \"Python\",\n];\n\nexport const TagsMultiSelect = () => {\n  const [selectedTags, setSelectedTags] = useState();\n  const onChange = (event) => setSelectedTags([...event.value]);\n\n  return (\n    <form className=\"k-form k-my-8 multiSelect\">\n      <MultiSelect\n        data={tags}\n        value={selectedTags}\n        onChange={onChange}\n        autoClose={false}\n        rounded=\"large\"\n      />\n    </form>\n  );\n};\n\nexport default TagsMultiSelect;\n","import * as React from \"react\";\nimport \"@progress/kendo-theme-default/dist/all.css\";\nimport { TagsMultiSelect } from \"./TagsMultiSelect\";\nimport { Slider } from \"@mui/material\";\nconst DropDownFilter = () => {\n  const handleChange = () => {};\n  const userState = \"Host\";\n  return (\n    <form className=\"text-center pt-4\">\n      {(userState === \"Artist\" && <span>State : </span>) || (\n        <span className=\"ddText\">Music Type </span>\n      )}\n      <TagsMultiSelect />\n      {(userState === \"Artist\" && <span>Occupancy : </span>) || (\n        <span className=\"ddText\">Band Size</span>\n      )}\n\n      <div>\n        <input hint=\"input\" type=\"text\" placeholder=\"Minimum\" />\n        <input hint=\"input\" type=\"text\" placeholder=\"Maximum\" />\n      </div>\n      \n      <div className=\"pt-5\">\n      {(userState === \"Artist\" && <span>Budget : </span>) || (\n        <span className=\"ddText\">Hourly Rate</span>\n      )}\n      <Slider\n        getAriaLabel={() => \"Temperature range\"}\n        defaultValue={50}\n        min={0}\n        max={100}\n        onChange={handleChange}\n        valueLabelDisplay=\"auto\"\n        sx={{\n          color: '#6f48eb'\n        }}\n          \n      />\n      </div>\n    </form>\n  );\n};\n\nexport default DropDownFilter;\n","import React from \"react\";\nimport CalendarFilter from \"../components/CalendarFilter/CalendarFilter\";\nimport DropDownFilter from \"../components/DropDownFilter/DropDownFilter\";\n\nconst Explore = () => {\n  return (\n    <div className=\"d-flex flex-column align-items-center justify-content-center\">\n      <DropDownFilter />\n      <CalendarFilter />\n    </div>\n  );\n};\nexport default Explore;\n","import React from \"react\";\n\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport \"./ArtistReservation.css\";\n\nconst ArtistReservation = (props) => {\n  const spotify = \"www.spotify.com/\" + props.artist.spotify;\n  return (\n    <div\n      className=\"d-flex justify-content-center flex-column aligin-items-center \"\n      key={props.artist.id}\n    >\n      <Carousel\n        className=\"carouselReservation\"\n        showThumbs={false}\n        showStatus={false}\n      >\n        {props.artist.pictures.map((picture) => {\n          return (\n            <div>\n              <img\n                className=\"imgReservation\"\n                alt=\"artist pictures\"\n                src={picture}\n              />\n              {/*\"./images/venue2.png\"*/}\n            </div>\n          );\n        })}\n      </Carousel>\n      <div className=\"d-flex justify-content-around\">\n        <h2 className=\"col-3 p-2 display-4\">{props.artist.Name}</h2>\n        <span className=\"col-3 text-warning\">{props.artist.rating}</span>\n        <a href={spotify} className=\"col-3 p-1\">\n          <img className=\"mt-1 h-75\" alt=\"\" src=\"./images/spotify.png\" />\n        </a>\n      </div>\n      <div className=\"d-flex justify-content-around\">\n        <h3 className=\"h3 col-3\">${props.artist.rate}</h3>\n        <h2 className=\"h3 col-3\">{props.artist.musicType}</h2>\n        <h3 className=\"h3 col-3\"> Band Size: {props.artist.bandSize}</h3>\n      </div>\n      <p>{props.artist.description}</p>\n      <button className=\" mt-1 mx-auto btn btnReservation\">Reserve</button>\n      {/* //link to stripe */}\n    </div>\n  );\n};\n\nexport default ArtistReservation;\n","import React from \"react\";\nimport ArtistReservation from \"../components/ArtistReservation/ArtistReservation\";\nconst Saved = () => {\n  const artists = {\n    Name: \"Austin\",\n    Rate: \"50 per Hour\",\n    musicType: \"Pop\",\n    bandSize: \"2-4\",\n    pictures: [\n      \"/images/artist.png\",\n      \"/images/artist.png\",\n      \"/images/artist.png\",\n      \"/images/artist.png\",\n    ],\n    id: 0.123,\n  };\n  return (\n    <div className=\"\">\n      <ArtistReservation artist={artists} />\n    </div>\n  );\n};\nexport default Saved;\n","export default __webpack_public_path__ + \"static/media/musician.4cbbf55a.jpeg\";","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport Form from \"react-bootstrap/Form\";\nimport Musician from \"../assets/musician.jpeg\";\nimport { LOGIN_ARTIST } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Login.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Login = () => {\n  const [formStateEmail, setFormStateEmail] = useState();\n  const [formStatePassword, setFormStatePassword] = useState();\n\n  const [login, { error }] = useMutation(LOGIN_ARTIST);\n  let history = useHistory();\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const variables = {\n      email: formStateEmail,\n      password: formStatePassword,\n    };\n\n    try {\n      console.log(variables);\n      const mutationResponse = await login({ variables });\n      console.log(\"response\");\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n      history.push(\"explore\");\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChangeEmail = (event) => {\n    setFormStateEmail(event.target.value);\n  };\n\n  const handleChangePassword = (event) => {\n    setFormStatePassword(event.target.value);\n  };\n\n  return (\n    <section className=\"artistLogin\">\n      <div className=\"artistMedia \">\n        <img\n          className=\"backgroundImageArtistLogin\"\n          src={Musician}\n          alt=\"folk singer\"\n          style={{ width: \"100%\", height: \"100%\" }}\n        />\n        <h1 className=\"artistOverlayText\">Sign in</h1>\n\n        <div className=\"artistLogin\">\n          <>\n            <Form onSubmit={handleFormSubmit} className=\"artistLoginForm\">\n              <Form.Label htmlFor=\"loginEmail\"></Form.Label>\n              <Form.Control\n                placeholder=\"artist@email.com\"\n                type=\"text\"\n                id=\"artistLoginEmail\"\n                onChange={handleChangeEmail}\n              />\n              <Form.Text id=\"passwordHelpBlock\" muted></Form.Text>\n\n              <Form.Label htmlFor=\"artistLoginPassword\"></Form.Label>\n              <Form.Control\n                placeholder=\"******\"\n                type=\"text\"\n                id=\"artistInputPassword\"\n                onChange={handleChangePassword}\n                value={formStatePassword}\n              />\n\n              <div className=\"flex-row flex-end\">\n                <button\n                  className=\"btn artistLoginButton mx-auto\"\n                  to={{ pathname: \"/explore\" }}\n                >\n                  Sign in\n                </button>\n              </div>\n              {error ? (\n                <div className=\"artistErrorText\">\n                  <p>The provided credentials are incorrect</p>\n                </div>\n              ) : null}\n            </Form>\n          </>\n          <p className=\"artistLinkToSignup\">\n            Don't have an account? <br></br>\n            <Link className=\"artistPageLink\" to={{ pathname: \"/artistSignup\" }}>\n              Sign up\n            </Link>\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/hostPic.57bdcfaa.jpeg\";","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport Form from \"react-bootstrap/Form\";\nimport Host from \"../assets/hostPic.jpeg\";\nimport { LOGIN_HOST } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./LoginHost.css\";\nimport { Link } from \"react-router-dom\";\n\nconst LoginHost = () => {\n  const [formStateEmail, setFormStateEmail] = useState();\n  const [formStatePassword, setFormStatePassword] = useState();\n\n  const [login, { error }] = useMutation(LOGIN_HOST);\n  let history = useHistory();\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const variables = {\n      email: formStateEmail,\n      password: formStatePassword,\n    };\n\n    try {\n      console.log(variables);\n      const mutationResponse = await login({ variables });\n      console.log(\"response\");\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n      history.push(\"/explore\");\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChangeEmail = (event) => {\n    setFormStateEmail(event.target.value);\n  };\n\n  const handleChangePassword = (event) => {\n    setFormStatePassword(event.target.value);\n  };\n\n  return (\n    <section className=\"hostLogin\">\n      <div className=\"hostMedia \">\n        <img\n          className=\"backgroundImageHostLogin\"\n          src={Host}\n          alt=\"host looking over venue\"\n          style={{ width: \"100%\", height: \"100%\" }}\n        />\n        <h1 className=\"hostOverlayText\">Sign in</h1>\n\n        <div className=\"hostLogin\">\n          <>\n            <Form onSubmit={handleFormSubmit} className=\"hostLoginForm\">\n              <Form.Label htmlFor=\"loginEmail\"></Form.Label>\n              <Form.Control\n                placeholder=\"host@email.com\"\n                type=\"text\"\n                id=\"hostLoginEmail\"\n                onChange={handleChangeEmail}\n                value={formStateEmail}\n              />\n              <Form.Text id=\"passwordHelpBlock\" muted></Form.Text>\n\n              <Form.Label htmlFor=\"hostLoginPassword\"></Form.Label>\n              <Form.Control\n                placeholder=\"******\"\n                type=\"text\"\n                id=\"hostInputPassword\"\n                onChange={handleChangePassword}\n                value={formStatePassword}\n              />\n\n              <div className=\"flex-row flex-end\">\n                <button\n                  className=\"btn hostLoginButton mx-auto\"\n                  to={{ pathname: \"./explore\" }}\n                >\n                  Sign in\n                </button>\n              </div>\n\n              {error ? (\n                <div className=\"hostErrorText\">\n                  <p>The provided credentials are incorrect</p>\n                </div>\n              ) : null}\n            </Form>\n          </>\n          <p className=\"hostLinkToSignup\">\n            Don't have an account? <br></br>\n            <Link className=\"hostPageLink\" to={{ pathname: \"/hostSignup\" }}>\n              Sign up\n            </Link>\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default LoginHost;\n","export default __webpack_public_path__ + \"static/media/juanArtist.4c52594d.jpeg\";","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport Auth from \"../../utils/auth\";\nimport { ADD_ARTIST } from \"../../utils/mutations\";\nimport { Link } from \"react-router-dom\";\nimport Explore from \"../../pages/Explore\";\nimport { Form } from \"react-bootstrap\";\nimport \"../../components/Modal/ArtistModal.css\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Modal({ closeModal }) {\n  const [formStateEmail, setFormStateEmail] = useState();\n  const [formStatePassword, setFormStatePassword] = useState();\n  const [formStateName, setFormStateName] = useState();\n  const [formStateMusicType, setFormStateMusicType] = useState();\n  const [formStateUsername, setFormStateUsername] = useState();\n\n  const [addArtist, { error }] = useMutation(ADD_ARTIST);\n  let history = useHistory();\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const variables = {\n      email: formStateEmail,\n      password: formStatePassword,\n      name: formStateName,\n      musicType: formStateMusicType,\n      username: formStateUsername,\n    };\n\n    try {\n      console.log(variables);\n      const mutationResponse = await addArtist({ variables });\n      console.log(\"response\");\n      const token = mutationResponse.data.addArtist.token;\n      Auth.login(token);\n      history.push(\"/explore\");\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChangeEmail = (event) => {\n    setFormStateEmail(event.target.value);\n  };\n\n  const handleChangePassword = (event) => {\n    setFormStatePassword(event.target.value);\n  };\n\n  const handleChangeName = (event) => {\n    setFormStateName(event.target.value);\n  };\n\n  const handleChangeMusicType = (event) => {\n    setFormStateMusicType(event.target.value);\n  };\n\n  const handleChangeUsername = (event) => {\n    setFormStateUsername(event.target.value);\n  };\n\n  return (\n    <div className=\"modalBackground\">\n      <div className=\"modalContainer\">\n        <div className=\"title\">\n          <h1 className=\"artistSignup\">Artist Signup</h1>\n        </div>\n\n        <div className=\"body\">\n          <Form onSubmit={handleFormSubmit} className=\"artistSignupForm\">\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={formStateEmail}\n                placeholder=\"Enter email\"\n                onChange={handleChangeEmail}\n                id=\"artistSignupEmail\"\n              />\n              <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={formStatePassword}\n                placeholder=\"Password\"\n                onChange={handleChangePassword}\n                id=\"artistSignupPassword\"\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={formStateUsername}\n                placeholder=\"\"\n                onChange={handleChangeUsername}\n                id=\"artistSignupUsername\"\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Performers Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={formStateName}\n                placeholder=\"Enter Name\"\n                onChange={handleChangeName}\n                id=\"artistSignupName\"\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Genre of Music</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={formStateMusicType}\n                placeholder=\"Genre\"\n                onChange={handleChangeMusicType}\n                id=\"artistSignupGenre\"\n              />\n            </Form.Group>\n            <div className=\"footer\">\n              <button\n                className=\"cancelBtnArtist\"\n                onClick={() => closeModal(false)}\n              >\n                Cancel\n              </button>\n\n              <button\n                className=\"continueBtnArtist\"\n                to={{ pathname: \"../pages/explore\" }}\n                type=\"submit\"\n              >\n                Continue\n              </button>\n            </div>\n          </Form>\n        </div>\n\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n","import React, { useState } from \"react\";\nimport \"./ArtistSignup.css\";\nimport Artist from \"../assets/juanArtist.jpeg\";\nimport ArtistModal from \"../components/Modal/ArtistModal\";\n\nconst ArtistSignup = () => {\n  const [openModal, setOpenModal] = useState(false);\n\n  return (\n    <section>\n      <div className=\"mainSection\">\n        <div className=\"artistPhoto\">\n          <img\n            className=\"backgroundImage\"\n            src={Artist}\n            alt=\"performer head shot\"\n          />\n        </div>\n\n        <div className=\"coralBack\"></div>\n        <div className=\"greyBack\"></div>\n\n        <div className=\"infoBlock\">\n          <p className=\"artistInto\">\n            Become an Artist and have access to thousands of venues at your\n            fingertips.\n          </p>\n        </div>\n\n        <button\n          className=\"openModalBtn artistSignupButton\"\n          onClick={() => {\n            setOpenModal(true);\n          }}\n        >\n          Signup\n        </button>\n        {openModal && <ArtistModal closeModal={setOpenModal} />}\n      </div>\n    </section>\n  );\n};\n\nexport default ArtistSignup;\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport Auth from \"../../utils/auth\";\nimport { ADD_HOST } from \"../../utils/mutations\";\nimport Explore from \"../../pages/Explore\";\nimport { Form } from \"react-bootstrap\";\nimport \"../../components/Modal/HostModal.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nfunction Modal({ closeModal }) {\n  const [formStateFirstName, setFormStateFirstName] = useState();\n  const [formStateLastName, setFormStateLastName] = useState();\n  const [formStateEmail, setFormStateEmail] = useState();\n  const [formStatePassword, setFromStatePassword] = useState();\n  const [formStateUsername, setFormStateUsername] = useState();\n\n  const [addHost, { error }] = useMutation(ADD_HOST);\n  let history = useHistory();\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const variables = {\n      email: formStateEmail,\n      password: formStatePassword,\n      firstName: formStateFirstName,\n      lastName: formStateLastName,\n      username: formStateUsername,\n    };\n\n    try {\n      console.log(variables);\n      const mutationResponse = await addHost({ variables });\n      console.log(\"response\");\n      const token = mutationResponse.data.addHost.token;\n      Auth.login(token);\n      history.push(\"/explore\");\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChangeEmail = (event) => {\n    setFormStateEmail(event.target.value);\n  };\n\n  const handleChangePassword = (event) => {\n    setFromStatePassword(event.target.value);\n  };\n\n  const handleChangeFirstName = (event) => {\n    setFormStateFirstName(event.target.value);\n  };\n\n  const handleChangeLastName = (event) => {\n    setFormStateLastName(event.target.value);\n  };\n\n  const handleChangeUsername = (event) => {\n    setFormStateUsername(event.target.value);\n  };\n\n  return (\n    <div className=\"hostModalBackground\">\n      <div className=\"hostModalContainer\">\n        <div className=\"hostTitle\">\n          <h1 className=\"hostSignup\">Host Signup</h1>\n        </div>\n\n        <div className=\"hostBody\">\n          <Form onSubmit={handleFormSubmit} className=\"hostSignupForm\">\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={formStateEmail}\n                placeholder=\"Enter email\"\n                onChange={handleChangeEmail}\n                id=\"hostSignupEmail\"\n              />\n              <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={formStatePassword}\n                placeholder=\"Password\"\n                onChange={handleChangePassword}\n                id=\"hostSignupPassword\"\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label>First Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={formStateFirstName}\n                placeholder=\"First Name\"\n                onChange={handleChangeFirstName}\n                id=\"hostSignupFirstName\"\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Last Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={formStateLastName}\n                placeholder=\"Last Name\"\n                onChange={handleChangeLastName}\n                id=\"hostSignupLastName\"\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={formStateUsername}\n                placeholder=\"Username\"\n                onChange={handleChangeUsername}\n                id=\"hostSignupUsername\"\n              />\n            </Form.Group>\n            <div className=\"hostFooter mt-5\">\n              <button\n                className=\"cancelBtnHost\"\n                onClick={() => closeModal(false)}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={() => closeModal(true)}\n                className=\"continueBtnHost\"\n                to={{ pathname: \"/explore\" }}\n              >\n                Continue\n              </button>\n            </div>\n          </Form>\n        </div>\n\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n","export default __webpack_public_path__ + \"static/media/davidHost.c72e3071.jpeg\";","import React, { useState } from \"react\";\nimport HostModal from \"../components/Modal/HostModal\";\nimport Host from \"../assets/davidHost.jpeg\";\nimport \"./HostSignup.css\";\n\nconst ArtistSignup = () => {\n  const [openModal, setOpenModal] = useState(false);\n\n  return (\n    <section>\n      <div className=\"hostSignupMainSection\">\n        <div className=\"hostSignupPhoto\">\n          <img\n            className=\"hostSignupBackgroundImage\"\n            src={Host}\n            alt=\"host looking over venue\"\n          />\n        </div>\n\n        <div className=\"hostCoralBack\"></div>\n        <div className=\"hostGreyBack\"></div>\n\n        <div className=\"hostInfoBlock\">\n          <p className=\"hostIntro\">\n            Become a Host and have access to thousands of performers at your\n            fingertips.\n          </p>\n        </div>\n\n        <button\n          className=\"hostOpenModalBtn\"\n          onClick={() => {\n            setOpenModal(true);\n          }}\n        >\n          Signup\n        </button>\n        {openModal && <HostModal closeModal={setOpenModal} />}\n      </div>\n    </section>\n  );\n};\n\nexport default ArtistSignup;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport Navigation from \"./components/Nav/Navigation\";\nimport Header from \"./components/Header/Header\";\nimport Home from \"./pages/Home\";\nimport Account from \"./pages/Account\";\nimport Bookings from \"./pages/Bookings\";\nimport Explore from \"./pages/Explore\";\nimport Saved from \"./pages/Saved\";\nimport Login from \"./pages/Login\";\nimport LoginHost from \"./pages/LoginHost\";\nimport ArtistSignup from \"./pages/ArtistSignup\";\nimport HostSignup from \"./pages/HostSignup\";\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"wrapper\">\n          <Header />\n          <main className=\"main\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/account\" component={Account} />\n              <Route exact path=\"/bookings\" component={Bookings} />\n              <Route exact path=\"/explore\" component={Explore} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/loginHost\" component={LoginHost} />\n              <Route exact path=\"/artistSignup\" component={ArtistSignup} />\n              <Route exact path=\"/hostSignup\" component={HostSignup} />\n              <Route exact path=\"/Saved\" component={Saved} />\n            </Switch>\n          </main>\n\n          <Navigation />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./reset.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}