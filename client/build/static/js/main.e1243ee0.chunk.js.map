{"version":3,"sources":["components/Nav/Navigation.js","utils/reducers.js","utils/actions.js","utils/GlobalState.js","components/Header/Header.js","components/VideoLoop/videoBackground.mp4","components/VideoLoop/VideoLoop.js","utils/auth.js","pages/Home.js","utils/queries.js","utils/mutations.js","pages/ArtistProfile.js","pages/HostProfile.js","components/ArtistCard/ArtistCard.js","pages/Bookings.js","components/CalendarFilter/CalendarFilter.js","components/DropDownFilter/TagsMultiSelect.js","components/DropDownFilter/DropDownFilter.js","pages/Explore.js","components/ArtistReservation/ArtistReservation.js","pages/Saved.js","assets/musician.jpg","pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["tabs","route","icon","faSearch","label","faHeart","faBook","faUser","Navigation","props","className","role","map","tab","index","to","activeClassName","size","reducer","state","action","type","products","cartOpen","cart","product","_id","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","useReducer","dispatch","Header","alt","src","VideoLoop","loop","muted","autoPlay","controls","backgroundVideo","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Home","auth","loggedIn","pathname","GET_MEARTIST","gql","GET_ARTIST","GET_MEHOST","GET_HOST","ADD_HOST","LOGIN_ARTIST","ADD_ARTIST","ArtistProfile","userParam","useParams","username","useMutation","addArtist","useQuery","variables","loading","data","artist","me","Auth","getProfile","handleClick","a","id","console","error","onClick","HostProfile","addHost","host","ArtistCard","saveArtist","artistsData","faHeartCirclePlus","showThumbs","showStatus","pictures","picture","Name","Rate","musicType","bandSize","Bookings","CalendarFilter","useState","date","setDate","onChange","selectRange","tags","TagsMultiSelect","selectedTags","setSelectedTags","MultiSelect","event","autoClose","rounded","DropDownFilter","Explore","ArtistReservation","Saved","Login","email","password","formState","setFormState","login","handleFormSubmit","preventDefault","mutationResponse","log","handleChange","target","name","Musician","style","width","height","Form","onSubmit","Label","htmlFor","Control","placeholder","Text","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e1243ee0.chunk.js","sourcesContent":["import React from \"react\";\nimport { Nav, NavItem } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSearch,\n  faBook,\n  faUser,\n  faHeart,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./navigation.css\";\n\nconst tabs = [\n  {\n    route: \"/explore\",\n    icon: faSearch,\n    label: \"Explore\",\n  },\n  {\n    route: \"/saved\",\n    icon: faHeart,\n    label: \"Saved\",\n  },\n  {\n    route: \"/bookings\",\n    icon: faBook,\n    label: \"Bookings\",\n  },\n  {\n    route: \"/account\",\n    icon: faUser,\n    label: \"Account\",\n  },\n];\n\nconst Navigation = (props) => {\n  return (\n    <nav className=\"bottom-tab-nav navbar  navbar-light\" role=\"navigation\">\n      <Nav className=\"w-100\">\n        <div className=\" d-flex flex-row justify-content-around w-100\">\n          {tabs.map((tab, index) => (\n            <NavItem key={`tab-${index}`}>\n              <NavLink\n                to={tab.route}\n                className=\"bottom-nav-link\"\n                activeClassName=\"active\"\n              >\n                <div className=\"row d-flex flex-column justify-content-center align-items-center\">\n                  <FontAwesomeIcon size=\"lg\" icon={tab.icon} />\n                  <div>{tab.label}</div>\n                </div>\n              </NavLink>\n            </NavItem>\n          ))}\n        </div>\n      </Nav>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Nav } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./header.css\";\n\nconst Header = (props) => {\n  return (\n    <div className=\"navbar  navbar-light\">\n      <Nav className=\"w-100 d-flex flex-row w-100\">\n        <NavLink\n          to={\"/\"}\n          className=\"d-flex nav-link col-3 mx-auto justify-content-center\"\n        >\n          <img alt=\"HouseShow Logo\" src=\"./images/houseshow-logo-large.png\" />\n        </NavLink>\n      </Nav>\n    </div>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/videoBackground.fcee9df6.mp4\";","import React from \"react\";\nimport backgroundVideo from \"./videoBackground.mp4\";\nimport \"./VideoLoop.css\";\nconst VideoLoop = (props) => {\n  return (\n    <div className=\"videoContainer\">\n      <video loop muted autoPlay controls=\"\" className=\"videoFrame\">\n        <source src={backgroundVideo} />\n      </video>\n    </div>\n  );\n};\nexport default VideoLoop;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport VideoLoop from \"../components/VideoLoop/VideoLoop\";\nimport \"./Home.css\";\nimport auth from \"../utils/auth\";\nconst Home = () => {\n  return (\n    <div className=\"w-100 d-flex flex-column align-items-center justify-content-center \">\n      <VideoLoop className=\"mb-5\" />\n      {auth.loggedIn() && <Link to={{ pathname: \"/explore\" }}>Explore</Link>}\n      <Link className=\"mt-5 btn button\" to={{ pathname: \"/explore\" }}>\n        Explore\n      </Link>\n      <div className=\"w-100 d-flex flex-row align-items-center\">\n        <Link className=\"signIn-Link btn mx-auto\" to={{ pathname: \"/login\" }}>\n          Sign in as Host\n        </Link>\n        <Link className=\" signIn-Link btn mx-auto\" to={{ pathname: \"/login\" }}>\n          Sign in as Artist\n        </Link>\n      </div>\n      <div className=\"w-100 d-flex flex-row align-items-center mb-4\">\n        <Link className=\"btn button mx-auto\" to={{ pathname: \"/login\" }}>\n          I want to Host\n        </Link>\n        <Link className=\"btn button mx-auto\" to={{ pathname: \"/login\" }}>\n          I want to Perform\n        </Link>\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_MEARTIST = gql`\n  {\n    meArtist {\n      _id\n      username\n      name\n      rating\n      musicType\n      rate\n      bandSize\n      pictures\n      spotifyLink\n      email\n      venues {\n        _id\n        name\n        owner\n        city\n        description\n        occupancy\n        cost\n      }\n    }\n  }\n`;\n\nexport const GET_ARTIST = gql`\n  query artist($name: Sring!) {\n    artist(name: $name) {\n      _id\n      username\n      name\n      rating\n      musicType\n      rate\n      bandSize\n      pictures\n      spotifyLink\n      email\n      venues {\n        _id\n        name\n        owner\n        city\n        description\n        occupancy\n        cost\n      }\n    }\n  }\n`;\n\nexport const GET_ARTISTS = gql`\n  query artists {\n    _id\n    username\n    name\n    rating\n    musicType\n    rate\n    bandSize\n    pictures\n    spotifyLink\n    email\n    venues {\n      _id\n      name\n      owner\n      city\n      description\n      occupancy\n      cost\n    }\n  }\n`;\n\nexport const GET_MEHOST = gql`\n  {\n    meHost {\n      _id\n      username\n      firstName\n      lastName\n      email\n      artists {\n        _id\n        name\n        rating\n        musicType\n        rate\n        email\n      }\n      venues {\n        _id\n        name\n        owner\n        city\n        description\n        occupancy\n        cost\n      }\n    }\n  }\n`;\n\nexport const GET_HOST = gql`\n  query host($email: String!) {\n    host(email: $email) {\n      _id\n      username\n      firstName\n      lastName\n      email\n      artists {\n        _id\n        name\n        rating\n        musicType\n        rate\n        email\n      }\n      venues {\n        _id\n        name\n        owner\n        city\n        description\n        occupancy\n        cost\n      }\n    }\n  }\n`;\n\nexport const GET_HOSTS = gql`\n  query hosts {\n    _id\n    username\n    firstName\n    lastName\n    email\n    artists {\n      _id\n      name\n      rating\n      musicType\n      rate\n      email\n    }\n    venues {\n      _id\n      name\n      owner\n      city\n      description\n      occupancy\n      cost\n    }\n  }\n`;\n\nexport const GET_VENUE = gql`\n  query venue($name: String!) {\n    venue(name: $name) {\n      _id\n      name\n      owner\n      description\n      city\n      occupancy\n      pictures\n      cost\n    }\n  }\n`;\n\nexport const GET_VENUES = gql`\n  query venues {\n    _id\n    name\n    owner\n    description\n    city\n    occupancy\n    pictures\n    const\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN_HOST = gql`\n  mutation loginHost($email: String!, $password: String!) {\n    loginHost(email: $email, password: $password) {\n      token\n      host {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_HOST = gql`\n  mutation addHost(\n    $username: String!\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addHost(\n      username: $username\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      host {\n        _id\n      }\n    }\n  }\n`;\n\nexport const UPDATE_HOST = gql`\n  mutation updateHost(\n    $username: String!\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    updateHost(\n      username: $username\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      host {\n        _id\n      }\n    }\n  }\n`;\n\nexport const HIRE_ARTIST = gql`\n  mutation hireArtist($id: ID!) {\n    hireArtist(artistId: $id) {\n      _id\n      username\n      artists {\n        _id\n        name\n      }\n    }\n  }\n`\n\nexport const LOGIN_ARTIST = gql`\n  mutation loginArtist($email: String!, $password: String!) {\n    loginArtist(email: $email, password: $password) {\n      token\n      artist {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_ARTIST = gql`\n  mutation addArtist(\n    $username: String!\n    $name: String!\n    $musicType: String!\n    $pictures: [String]!\n    $bandSize: INT!\n    $rate: INT!\n    $email: String!\n    $password: String!\n  ) {\n    addArtist(\n      username: $username\n      name: $name\n      musicType: $musicType\n      pictures: $pictures\n      bandSize: $bandSize\n      rate: $rate\n      email: $email\n      password: $password\n    ) {\n      token\n      artist {\n        _id\n      }\n    }\n  }\n`;\n\nexport const UPDATE_ARTIST = gql`\n  mutation updateArtist(\n    $username: String!\n    $name: String!\n    $musicType: String!\n    $pictures: [String]!\n    $bandSize: INT!\n    $rate: INT!\n    $email: String!\n    $password: String!\n  ) {\n    updateArtist(\n      username: $username\n      name: $name\n      musicType: $musicType\n      pictures: $pictures\n      bandSize: $bandSize\n      rate: $rate\n      email: $email\n      password: $password\n    ) {\n      token\n      artist {\n        _id\n      }\n    }\n  }\n`;\n\nexport const BOOK_VENUE = gql`\n  mutation bookVenue($id: ID!) {\n    bookVenue(venueId: $id) {\n      _id\n      venue {\n        _id\n        name\n      }\n    }\n  }\n`\n\nexport const ADD_VENUE = gql`\n  mutation addVenue(\n    $name: String!\n    $description: String!\n    $occupancy: INT!\n    $city: String!\n    $pictures: [String]!\n    $cost: INT!\n  ) {\n    addVenue(\n      name: $name\n      description: $description\n      occupancy: $occupancy\n      city: $city\n      pictures: $pictures\n      cost: $cost\n    )\n    host {\n      _id\n    }\n  }\n`;\n\nexport const UPDATE_VENUE = gql`\n  mutation updateVenue(\n    $name: String!\n    $description: String!\n    $occupancy: INT!\n    $city: String!\n    $pictures: [String]!\n    $cost: INT!\n  ) {\n    updateVenue(\n      name: $name\n      description: $description\n      occupancy: $occupancy\n      city: $city\n      pictures: $pictures\n      cost: $cost\n    )\n    host {\n      _id\n    }\n  }\n`;\n","import React from \"react\";\nimport { Redirect, useParams } from 'react-router-dom';\n\n// import UpdateArtist from '../components/UpdateArtist';\n\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_ARTIST, GET_MEARTIST } from '../utils/queries';\nimport { ADD_ARTIST } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst ArtistProfile = (props) => {\n  const { username: userParam } = useParams();\n\n  const [addArtist] = useMutation(ADD_ARTIST);\n  const { loading, data } = useQuery(userParam ? GET_ARTIST : GET_MEARTIST, {\n    variables: { username: userParam },\n  });\n\n  const artist = data?.me || data?.artist || {};\n\n  // redirect to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Redirect to=\"/profile\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!artist?.username) {\n    return (\n      <h4>\n        You must be logged in to see this.\n      </h4>\n    );\n  }\n\n  const handleClick = async () => {\n    try {\n      await addArtist({\n        variables: { id: artist._id },\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"flex-row mb-3\">\n        <h2 className=\"bg-dark text-secondary p-3 display-inline-block\">\n          Viewing {userParam ? `${artist.username}'s` : 'your'} profile.\n        </h2>\n\n        {userParam && (\n          <button className=\"btn ml-auto\" onClick={handleClick}>\n            Add Artist\n          </button>\n        )}\n      </div>\n\n      {/* <div className=\"flex-row justify-space-between mb-3\">\n        <div className=\"col-12 col-lg-3 mb-3\">\n          <ArtistList\n            username={artist.username}\n            artistCount={artist.artistCount}\n            artists={artist.artists}\n          />\n        </div>\n      </div>\n      <div className=\"mb-3\">{!userParam && <UpdateArtist />}</div> */}\n    </div>\n  );\n};\n\nexport default ArtistProfile;\n","import React from \"react\";\nimport { Redirect, useParams } from 'react-router-dom';\n\n// import UpdateHost from '../components/UpdateHost';\n\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_HOST, GET_MEHOST } from '../utils/queries';\nimport { ADD_HOST } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst HostProfile = (props) => {\n  const { username: userParam } = useParams();\n\n  const [addHost] = useMutation(ADD_HOST);\n  const { loading, data } = useQuery(userParam ? GET_HOST : GET_MEHOST, {\n    variables: { username: userParam },\n  });\n\n  const host = data?.me || data?.host || {};\n\n  // redirect to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Redirect to=\"/profile\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!host?.username) {\n    return (\n      <h4>\n        You must be logged in to see this.\n      </h4>\n    );\n  }\n\n  const handleClick = async () => {\n    try {\n      await addHost({\n        variables: { id: host._id },\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"flex-row mb-3\">\n        <h2 className=\"bg-dark text-secondary p-3 display-inline-block\">\n          Viewing {userParam ? `${host.username}'s` : 'your'} profile.\n        </h2>\n\n        {userParam && (\n          <button className=\"btn ml-auto\" onClick={handleClick}>\n            Add Host\n          </button>\n        )}\n      </div>\n\n      {/* <div className=\"flex-row justify-space-between mb-3\">\n        <div className=\"col-12 col-lg-3 mb-3\">\n          <HostList\n            username={host.username}\n            hostCount={host.hostCount}\n            hosts={host.hosts}\n          />\n        </div>\n      </div>\n      <div className=\"mb-3\">{!userParam && <UpdateHost />}</div> */}\n    </div>\n  );\n};\n\nexport default HostProfile;\n","import React from \"react\";\n\nimport { Carousel } from \"react-responsive-carousel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeartCirclePlus } from \"@fortawesome/free-solid-svg-icons\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport \"./ArtistCard.css\";\n\nconst ArtistCard = (props) => {\n  const saveArtist = () => {};\n  return (\n    <div>\n      {props.artistsData.map((artist) => {\n        return (\n          <div\n            className=\"d-flex justify-content-center flex-column aligin-items-center\"\n            key={artist.id}\n          >\n            <FontAwesomeIcon\n              onClick={saveArtist}\n              size=\"xs\"\n              className=\"heartButton\"\n              icon={faHeartCirclePlus}\n            />\n            <Carousel\n              className=\"carousel mx-auto\"\n              showThumbs={false}\n              showStatus={false}\n            >\n              {artist.pictures.map((picture) => {\n                return (\n                  <img\n                    className=\"imgCarousel\"\n                    alt=\"artist pictures\"\n                    src={picture}\n                  />\n                );\n              })}\n            </Carousel>\n            <div className=\"d-flex justify-content-around pt-3 bookings-text\">\n              <div>\n                <h2 className=\"h2\">{artist.Name}</h2>\n                <h3 className=\"h3\">${artist.Rate}</h3>\n              </div>\n\n              <div>\n                <h2 className=\"h2\">{artist.musicType}</h2>\n                <h3 className=\"h3\">{artist.bandSize}</h3>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ArtistCard;\n","import React from \"react\";\nimport ArtistCard from \"../components/ArtistCard/ArtistCard\";\nconst Bookings = (props) => {\n  const artists = [\n    {\n      Name: \"Austin\",\n      Rate: \"50 per Hour\",\n      musicType: \"Pop\",\n      bandSize: \"2-4\",\n      pictures: [\n        \"/images/artist.png\",\n        \"/images/artist.png\",\n        \"/images/artist.png\",\n        \"/images/artist.png\",\n      ],\n      id: 0.123,\n    },\n    {\n      Name: \"Austin\",\n      Rate: \"50 per Hour\",\n      musicType: \"Pop\",\n      bandSize: \"2-4\",\n      pictures: [\n        \"/images/artist.png\",\n        \"/images/artist.png\",\n        \"/images/artist.png\",\n        \"/images/artist.png\",\n      ],\n      id: 0.124,\n    },\n  ];\n  return (\n    <div className=\"\">\n      <ArtistCard artistsData={artists}></ArtistCard>;\n    </div>\n  );\n};\nexport default Bookings;\n","import React, { useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"./CalendarFilter.css\";\n\nfunction CalendarFilter() {\n  const [date, setDate] = useState(new Date());\n\n  return (\n    <div className=\"calendar-container \">\n      <Calendar onChange={setDate} value={date} selectRange={true} />\n    </div>\n  );\n}\n\nexport default CalendarFilter;\n","import React from \"react\";\nimport { MultiSelect } from \"@progress/kendo-react-dropdowns\";\nimport { useState } from \"react\";\nimport \"./MultiSelect.css\";\n\nconst tags = [\n  \"JavaScript\",\n  \"TypeScript\",\n  \"React\",\n  \"Next\",\n  \"Vue\",\n  \"Nuxt\",\n  \"Node\",\n  \"Python\",\n];\n\nexport const TagsMultiSelect = () => {\n  const [selectedTags, setSelectedTags] = useState();\n  const onChange = (event) => setSelectedTags([...event.value]);\n\n  return (\n    <form className=\"k-form k-my-8 multiSelect\">\n      <MultiSelect\n        data={tags}\n        value={selectedTags}\n        onChange={onChange}\n        autoClose={false}\n        rounded=\"large\"\n      />\n    </form>\n  );\n};\n\nexport default TagsMultiSelect;\n","import * as React from \"react\";\nimport \"@progress/kendo-theme-default/dist/all.css\";\nimport { TagsMultiSelect } from \"./TagsMultiSelect\";\n\nconst DropDownFilter = () => {\n  const userState = \"Host\";\n  return (\n    <div className=\"w-100 p-2\">\n      {(userState === \"Artist\" && <span>State : </span>) || (\n        <span>Music Type : </span>\n      )}\n      <TagsMultiSelect />\n      {(userState === \"Artist\" && <span>Occupancy : </span>) || (\n        <span>Band Size : </span>\n      )}\n      min max here\n      <TagsMultiSelect />\n      {(userState === \"Artist\" && <span>Budget : </span>) || (\n        <span>Hourly Rate : </span>\n      )}\n      Slider Here\n      <TagsMultiSelect />\n    </div>\n  );\n};\n\nexport default DropDownFilter;\n","import React from \"react\";\nimport CalendarFilter from \"../components/CalendarFilter/CalendarFilter\";\nimport DropDownFilter from \"../components/DropDownFilter/DropDownFilter\";\n\nconst Explore = () => {\n  return (\n    <div className=\"d-flex flex-column align-items-center justify-content-center\">\n      <DropDownFilter />\n      <CalendarFilter />\n    </div>\n  );\n};\nexport default Explore;\n","import React from \"react\";\n\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport \"./ArtistReservation.css\";\n\nconst ArtistReservation = (props) => {\n  return (\n    <div\n      className=\"d-flex justify-content-center flex-column aligin-items-center \"\n      key={props.artist.id}\n    >\n      <Carousel\n        className=\"carouselReservation\"\n        showThumbs={false}\n        showStatus={false}\n      >\n        {props.artist.pictures.map((picture) => {\n          return (\n            <div>\n              <img\n                className=\"imgReservation\"\n                alt=\"artist pictures\"\n                src={picture}\n              />\n              {/*\"./images/venue2.png\"*/}\n            </div>\n          );\n        })}\n      </Carousel>\n\n      <h2 className=\"p-2\">{props.artist.Name}</h2>\n      <span>stars</span>\n      <span>spotify link</span>\n      <h3 className=\"h3\">${props.artist.Rate}</h3>\n      <span>Description</span>\n      <h2 className=\"h2\">{props.artist.musicType}</h2>\n      <h3 className=\"h3\">{props.artist.bandSize}</h3>\n      <button className=\"btn btnReservation\">Reserve</button>\n    </div>\n  );\n};\n\nexport default ArtistReservation;\n","import React from \"react\";\nimport ArtistReservation from \"../components/ArtistReservation/ArtistReservation\";\nconst Saved = () => {\n  const artists = {\n    Name: \"Austin\",\n    Rate: \"50 per Hour\",\n    musicType: \"Pop\",\n    bandSize: \"2-4\",\n    pictures: [\n      \"/images/artist.png\",\n      \"/images/artist.png\",\n      \"/images/artist.png\",\n      \"/images/artist.png\",\n    ],\n    id: 0.123,\n  };\n  return (\n    <div className=\"\">\n      <ArtistReservation artist={artists} />\n    </div>\n  );\n};\nexport default Saved;\n","export default __webpack_public_path__ + \"static/media/musician.47d944c1.jpg\";","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport Form from \"react-bootstrap/Form\";\nimport Musician from \"../assets/musician.jpg\";\nimport { LOGIN_ARTIST } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport \"./Login.css\";\n\nconst Login = () => {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error }] = useMutation(LOGIN_ARTIST);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <section className=\"loginIn\">\n      <div className=\"media \">\n        <img\n          className=\"backgroundImage\"\n          src={Musician}\n          alt=\"folk singer\"\n          style={{ width: \"100%\", height: \"100%\" }}\n        />\n        <h1 className=\"overlayText\">Sign in</h1>\n\n        <div className=\"userCheck\">\n          {/* <Form>\n            <Form.Check type=\"switch\" id=\"hostSwitch\" label=\"Im a Host\" />\n\n            <Form.Check type=\"switch\" id=\"artistSwitch\" label=\"Im an Artist\" />\n          </Form> */}\n        </div>\n\n        <div className=\"userLogin\">\n          <>\n            <Form onSubmit={handleFormSubmit}>\n              <Form.Label htmlFor=\"loginEmail\"></Form.Label>\n              <Form.Control\n                placeholder=\"yourname@email.com\"\n                type=\"email\"\n                id=\"inputEmail\"\n                onChange={handleChange}\n                aria-describedby=\"passwordHelpBlock\"\n              />\n              <Form.Text id=\"passwordHelpBlock\" muted></Form.Text>\n\n              <Form.Label htmlFor=\"loginPassword\"></Form.Label>\n              <Form.Control\n                placeholder=\"******\"\n                type=\"passworrd\"\n                id=\"inputPassword\"\n                onChange={handleChange}\n                aria-describedby=\"passwordHelpBlock\"\n              />\n            </Form>\n            {error ? (\n              <div>\n                <p className=\"error-text\">\n                  The provided credentials are incorrect\n                </p>\n              </div>\n            ) : null}\n            <div className=\"flex-row flex-end submitButton\">\n              <button type=\"submit\">Sign in</button>\n            </div>\n          </>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport Navigation from \"./components/Nav/Navigation\";\nimport { StoreProvider } from \"./utils/GlobalState\";\nimport Header from \"./components/Header/Header\";\nimport Home from \"./pages/Home\";\nimport ArtistProfile from \"./pages/ArtistProfile\";\nimport HostProfile from \"./pages/HostProfile\";\nimport Bookings from \"./pages/Bookings\";\nimport Explore from \"./pages/Explore\";\nimport Saved from \"./pages/Saved\";\nimport Login from \"./pages/Login\";\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <StoreProvider>\n          <div className=\"wrapper\">\n            <Header />\n            <main className=\"main\">\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/artist\" component={ArtistProfile} />\n                <Route exact path=\"/host\" component={HostProfile} />\n                <Route exact path=\"/bookings\" component={Bookings} />\n                <Route exact path=\"/explore\" component={Explore} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/Saved\" component={Saved} />\n              </Switch>\n            </main>\n\n            <Navigation />\n          </div>\n        </StoreProvider>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./reset.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}