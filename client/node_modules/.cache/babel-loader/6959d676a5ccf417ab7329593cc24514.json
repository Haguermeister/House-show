{"ast":null,"code":"var _jsxFileName = \"/Users/austinhague/Full_Stack_UofR/Projects/shop-shop-till-you-drop/client/src/pages/Detail.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY, ADD_TO_CART, UPDATE_PRODUCTS } from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const {\n    id\n  } = useParams();\n  const [currentProduct, setCurrentProduct] = useState({});\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_PRODUCTS);\n  const {\n    products,\n    cart\n  } = state;\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id));\n    } // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n      data.products.forEach(product => {\n        idbPromise('products', 'put', product);\n      });\n    } // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then(indexedProducts => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find(cartItem => cartItem._id === id);\n\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', { ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct,\n          purchaseQuantity: 1\n        }\n      });\n      idbPromise('cart', 'put', { ...currentProduct,\n        purchaseQuantity: 1\n      });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id\n    });\n    idbPromise('cart', 'delete', { ...currentProduct\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, currentProduct && cart ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"\\u2190 Back to Products\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, currentProduct.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, currentProduct.description), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Price:\"), \"$\", currentProduct.price, ' ', /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addToCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Add to Cart\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: !cart.find(p => p._id === currentProduct._id),\n    onClick: removeFromCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Remove from Cart\")), /*#__PURE__*/React.createElement(\"img\", {\n    src: `/images/${currentProduct.image}`,\n    alt: currentProduct.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  })) : null, loading ? /*#__PURE__*/React.createElement(\"img\", {\n    src: spinner,\n    alt: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 18\n    }\n  }) : null, /*#__PURE__*/React.createElement(Cart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Detail;","map":{"version":3,"sources":["/Users/austinhague/Full_Stack_UofR/Projects/shop-shop-till-you-drop/client/src/pages/Detail.js"],"names":["React","useEffect","useState","Link","useParams","useQuery","Cart","useStoreContext","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","ADD_TO_CART","UPDATE_PRODUCTS","QUERY_PRODUCTS","idbPromise","spinner","Detail","state","dispatch","id","currentProduct","setCurrentProduct","loading","data","products","cart","length","find","product","_id","type","forEach","then","indexedProducts","addToCart","itemInCart","cartItem","purchaseQuantity","parseInt","removeFromCart","name","description","price","p","image"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}