{"ast":null,"code":"import { Kind } from '../language/kinds';\n/**\n * Returns an operation AST given a document AST and optionally an operation\n * name. If a name is not provided, an operation is only returned if only one is\n * provided in the document.\n */\n\nexport function getOperationAST(documentAST, operationName) {\n  var operation = null;\n\n  for (var _i2 = 0, _documentAST$definiti2 = documentAST.definitions; _i2 < _documentAST$definiti2.length; _i2++) {\n    var definition = _documentAST$definiti2[_i2];\n\n    if (definition.kind === Kind.OPERATION_DEFINITION) {\n      if (!operationName) {\n        // If no operation name was provided, only return an Operation if there\n        // is one defined in the document. Upon encountering the second, return\n        // null.\n        if (operation) {\n          return null;\n        }\n\n        operation = definition;\n      } else if (definition.name && definition.name.value === operationName) {\n        return definition;\n      }\n    }\n  }\n\n  return operation;\n}","map":{"version":3,"sources":["/Users/austinhague/Full_Stack_UofR/Projects/shop-shop-till-you-drop/client/node_modules/graphql/utilities/getOperationAST.mjs"],"names":["Kind","getOperationAST","documentAST","operationName","operation","_i2","_documentAST$definiti2","definitions","length","definition","kind","OPERATION_DEFINITION","name","value"],"mappings":"AAAA,SAASA,IAAT,QAAqB,mBAArB;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,eAAT,CAAyBC,WAAzB,EAAsCC,aAAtC,EAAqD;AAC1D,MAAIC,SAAS,GAAG,IAAhB;;AAEA,OAAK,IAAIC,GAAG,GAAG,CAAV,EAAaC,sBAAsB,GAAGJ,WAAW,CAACK,WAAvD,EAAoEF,GAAG,GAAGC,sBAAsB,CAACE,MAAjG,EAAyGH,GAAG,EAA5G,EAAgH;AAC9G,QAAII,UAAU,GAAGH,sBAAsB,CAACD,GAAD,CAAvC;;AAEA,QAAII,UAAU,CAACC,IAAX,KAAoBV,IAAI,CAACW,oBAA7B,EAAmD;AACjD,UAAI,CAACR,aAAL,EAAoB;AAClB;AACA;AACA;AACA,YAAIC,SAAJ,EAAe;AACb,iBAAO,IAAP;AACD;;AAEDA,QAAAA,SAAS,GAAGK,UAAZ;AACD,OATD,MASO,IAAIA,UAAU,CAACG,IAAX,IAAmBH,UAAU,CAACG,IAAX,CAAgBC,KAAhB,KAA0BV,aAAjD,EAAgE;AACrE,eAAOM,UAAP;AACD;AACF;AACF;;AAED,SAAOL,SAAP;AACD","sourcesContent":["import { Kind } from '../language/kinds';\n\n/**\n * Returns an operation AST given a document AST and optionally an operation\n * name. If a name is not provided, an operation is only returned if only one is\n * provided in the document.\n */\nexport function getOperationAST(documentAST, operationName) {\n  var operation = null;\n\n  for (var _i2 = 0, _documentAST$definiti2 = documentAST.definitions; _i2 < _documentAST$definiti2.length; _i2++) {\n    var definition = _documentAST$definiti2[_i2];\n\n    if (definition.kind === Kind.OPERATION_DEFINITION) {\n      if (!operationName) {\n        // If no operation name was provided, only return an Operation if there\n        // is one defined in the document. Upon encountering the second, return\n        // null.\n        if (operation) {\n          return null;\n        }\n\n        operation = definition;\n      } else if (definition.name && definition.name.value === operationName) {\n        return definition;\n      }\n    }\n  }\n\n  return operation;\n}\n"]},"metadata":{},"sourceType":"module"}