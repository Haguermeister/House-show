{"ast":null,"code":"import { GraphQLError } from '../../error/GraphQLError';\nexport function unknownFragmentMessage(fragName) {\n  return \"Unknown fragment \\\"\".concat(fragName, \"\\\".\");\n}\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n */\n\nexport function KnownFragmentNames(context) {\n  return {\n    FragmentSpread: function FragmentSpread(node) {\n      var fragmentName = node.name.value;\n      var fragment = context.getFragment(fragmentName);\n\n      if (!fragment) {\n        context.reportError(new GraphQLError(unknownFragmentMessage(fragmentName), node.name));\n      }\n    }\n  };\n}","map":{"version":3,"sources":["/Users/austinhague/Full_Stack_UofR/Projects/shop-shop-till-you-drop/client/node_modules/graphql/validation/rules/KnownFragmentNames.mjs"],"names":["GraphQLError","unknownFragmentMessage","fragName","concat","KnownFragmentNames","context","FragmentSpread","node","fragmentName","name","value","fragment","getFragment","reportError"],"mappings":"AAAA,SAASA,YAAT,QAA6B,0BAA7B;AACA,OAAO,SAASC,sBAAT,CAAgCC,QAAhC,EAA0C;AAC/C,SAAO,sBAAsBC,MAAtB,CAA6BD,QAA7B,EAAuC,KAAvC,CAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASE,kBAAT,CAA4BC,OAA5B,EAAqC;AAC1C,SAAO;AACLC,IAAAA,cAAc,EAAE,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;AAC5C,UAAIC,YAAY,GAAGD,IAAI,CAACE,IAAL,CAAUC,KAA7B;AACA,UAAIC,QAAQ,GAAGN,OAAO,CAACO,WAAR,CAAoBJ,YAApB,CAAf;;AAEA,UAAI,CAACG,QAAL,EAAe;AACbN,QAAAA,OAAO,CAACQ,WAAR,CAAoB,IAAIb,YAAJ,CAAiBC,sBAAsB,CAACO,YAAD,CAAvC,EAAuDD,IAAI,CAACE,IAA5D,CAApB;AACD;AACF;AARI,GAAP;AAUD","sourcesContent":["import { GraphQLError } from '../../error/GraphQLError';\nexport function unknownFragmentMessage(fragName) {\n  return \"Unknown fragment \\\"\".concat(fragName, \"\\\".\");\n}\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n */\n\nexport function KnownFragmentNames(context) {\n  return {\n    FragmentSpread: function FragmentSpread(node) {\n      var fragmentName = node.name.value;\n      var fragment = context.getFragment(fragmentName);\n\n      if (!fragment) {\n        context.reportError(new GraphQLError(unknownFragmentMessage(fragmentName), node.name));\n      }\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}