{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { compact } from \"./compact.js\";\nexport function mergeOptions(defaults, options) {\n  return compact(defaults, options, options.variables && {\n    variables: __assign(__assign({}, defaults.variables), options.variables)\n  });\n}","map":{"version":3,"mappings":";AAMA,SAASA,OAAT,QAAwB,cAAxB;AAOA,OAAM,SAAUC,YAAV,CAGJC,QAHI,EAIJC,OAJI,EAIiC;AAErC,SAAOH,OAAO,CAACE,QAAD,EAAWC,OAAX,EAAoBA,OAAO,CAACC,SAAR,IAAqB;AACrDA,aAAS,wBACJF,QAAQ,CAACE,SADL,GAEJD,OAAO,CAACC,SAFJ;AAD4C,GAAzC,CAAd;AAMD","names":["compact","mergeOptions","defaults","options","variables"],"sourceRoot":"","sources":["../../../src/utilities/common/mergeOptions.ts"],"sourcesContent":["import type {\n  QueryOptions,\n  WatchQueryOptions,\n  MutationOptions,\n} from \"../../core\";\n\nimport { compact } from \"./compact\";\n\ntype OptionsUnion<TData, TVariables, TContext> =\n  | WatchQueryOptions<TVariables, TData>\n  | QueryOptions<TVariables, TData>\n  | MutationOptions<TData, TVariables, TContext>;\n\nexport function mergeOptions<\n  TOptions extends OptionsUnion<any, any, any>\n>(\n  defaults: TOptions | Partial<TOptions>,\n  options: TOptions | Partial<TOptions>,\n): TOptions {\n  return compact(defaults, options, options.variables && {\n    variables: {\n      ...defaults.variables,\n      ...options.variables,\n    },\n  });\n}\n"]},"metadata":{},"sourceType":"module"}